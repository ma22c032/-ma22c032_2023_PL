# -*- coding: utf-8 -*-
"""graphing function

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wx4vs2Eu6BuXe840ArNRgaR29Jz8VLfo
"""

!pip install gitpython

import matplotlib.pyplot as plt  # Import Matplotlib for plotting
from mpl_toolkits.mplot3d import Axes3D  # Import 3D plotting from Matplotlib
import numpy as np  # Import NumPy for numerical operations

# Task 1: Graph a function of one variable (sin(x) for x in [0, 10])
x_task1 = np.linspace(0, 10, 100)  # Generate 100 evenly spaced values of x from 0 to 10
y_task1 = np.sin(x_task1)  # Calculate sin(x) for each value of x

# Create a plot for Task 1
plt.figure(figsize=(8, 4))  # Set the figure size
plt.plot(x_task1, y_task1, label='sin(x)')  # Plot sin(x)
plt.title('Plot of sin(x) for x in [0, 10]')  # Set the title
plt.xlabel('x')  # Label for the x-axis
plt.ylabel('sin(x)')  # Label for the y-axis
plt.legend()  # Display a legend
plt.grid(True)  # Add a grid
plt.show()  # Show the plot

# Task 2: Graph a function of two variables (cos(x^2 + y^2) for (x, y) in [-5, 5] x [-5, 5])
x_task2 = np.linspace(-5, 5, 100)  # Generate 100 evenly spaced values of x from -5 to 5
y_task2 = np.linspace(-5, 5, 100)  # Generate 100 evenly spaced values of y from -5 to 5
X_task2, Y_task2 = np.meshgrid(x_task2, y_task2)  # Create a grid of (x, y) values

# Calculate cos(x^2 + y^2) for each (x, y) pair
Z_task2 = np.cos(X_task2**2 + Y_task2**2)

# Create a 3D surface plot for Task 2
fig_task2 = plt.figure(figsize=(8, 6))  # Set the figure size
ax_task2 = fig_task2.add_subplot(111, projection='3d')  # Create a 3D axis
surf_task2 = ax_task2.plot_surface(X_task2, Y_task2, Z_task2, cmap='viridis')  # Plot the surface
plt.title('Plot of cos(x^2 + y^2) for (x, y) in [-5, 5] x [-5, 5]')  # Set the title
ax_task2.set_xlabel('x')  # Label for the x-axis
ax_task2.set_ylabel('y')  # Label for the y-axis
plt.show()  # Show the plot

