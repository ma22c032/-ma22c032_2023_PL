# -*- coding: utf-8 -*-
"""Pandas from dictionaries

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qp5diIS7eWOlOzw2yuXqEM0iZpnWn5Gn
"""

pip install pandas

import pandas as pd

# Task 1: Convert d0 to a corresponding pandas object pd0
d0 = {2: 'a', 1: 'b', 3: 'c'}
pd0 = pd.Series(d0)
print("Task 1 - Convert d0 to pd0:")
print(pd0)

# Task 2: Sort indices of pd0
pd0 = pd0.sort_index()
print("\nTask 2 - Sort indices of pd0:")
print(pd0)

# Task 3: Convert d1, d2 (together) to a pandas object dd
d1 = {'a': 1, 'b': 2}
d2 = {'b': 3, 'c': 4}
dd = pd.DataFrame({'d1': d1, 'd2': d2})
print("\nTask 3 - Convert d1 and d2 to dd:")
print(dd)

# Task 4: Examples of indexing and slicing on dd
print("\nTask 4 - Examples of indexing and slicing on dd:")
# Indexing by column name
print("Indexing by column name:")
print(dd['d1'])
# Slicing rows
print("\nSlicing rows:")
print(dd.loc['b': 'c'])

# Task 5: Examples of implicit and explicit indexing on dd
print("\nTask 5 - Examples of implicit and explicit indexing on dd:")
# Implicit indexing (integer-based)
print("Implicit indexing:")
print(dd.iloc[0, 0])  # Accessing the first element (row 0, column 0)
# Explicit indexing (label-based)
print("\nExplicit indexing:")
print(dd.loc['a', 'd1'])  # Accessing the 'a' row in 'd1' column

# Task 6: Forward fill and backfill missing values using various axes
print("\nTask 6 - Forward fill and backfill missing values:")
# Forward fill (fill missing values with the previous value along columns)
dd_ffill = dd.ffill()
print("Forward fill:")
print(dd_ffill)
# Backfill (fill missing values with the next value along columns)
dd_bfill = dd.bfill()
print("\nBackfill:")
print(dd_bfill)