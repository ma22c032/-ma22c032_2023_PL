# -*- coding: utf-8 -*-
"""world map of covid 19 cases

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RRJ3LOqF1viEHNzJjk8EclUxLlozXxnD
"""

import numpy as np
import pandas as pd
import os

!pip install pycountry
import pycountry

confirmed_links="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"

confirmed_cases = pd.read_csv(confirmed_links)

confirmed_cases.head()

confirmed_cases.drop(["Province/State","Lat","Long"],axis=1,inplace=True)

confirmed_df=confirmed_cases.groupby("Country/Region",as_index=False).sum()
confirmed_df1=confirmed_df.set_index("Country/Region")
confirmed_df2=confirmed_df1.transpose()
confirmed_df2.columns.rename(" ",inplace=True)
confirmed=confirmed_df2.unstack()  #converting panel data to time series data
confirmed.shape

confirmed.head()

confirmed_data=confirmed.to_frame()
confirmed_data.reset_index(inplace=True)
confirmed_data.columns=["Country","Date","ConfirmedCases"]
confirmed_data.sort_values(by="Date",inplace=True)

confirmed_data.head()

confirmed_data.reset_index(drop=True,inplace=True)

countries=confirmed_data["Country"].unique().tolist()

d_country_code = {}
for country in countries:
    try:
        country_data = pycountry.countries.search_fuzzy(country)
        # country_data is a list of objects of class pycountry.db.Country
        # The first item  ie at index 0 of list is best fit
        # object of class Country have an alpha_3 attribute
        country_code = country_data[0].alpha_3
        d_country_code.update({country: country_code})
    except:
        print('could not add ISO 3 code for ->', country)
        # If could not find country, make ISO code ' '
        d_country_code.update({country: ' '})

d_country_code["Taiwan"]="TWN"
d_country_code["Korea, South"]="KOR"
d_country_code["Burma"]="BUR"
d_country_code["Congo (Brazzaville)"]="COG"
d_country_code[" Congo (Kinshasa)"]="COD"
#for the rest ISO codes were not listed

for k, v in d_country_code.items():
    confirmed_data.loc[(confirmed_data.Country == k), 'iso_alpha'] = v #matching the key value pair for the countries and replacing them with ISO codes

import plotly.express as px

scl = [[0.0, '#ffffff'],[0.2, '#ff9999'],[0.4, '#FF7F50'], \
       [0.6, '#ff1a1a'],[0.8, '#cc0000'],[1.0, '#FFA500']]

fig = px.choropleth(confirmed_data, locations="iso_alpha",
                    color="ConfirmedCases",
                    hover_name="Country", # column to add to hover information
                      color_continuous_scale= scl,
                    animation_frame= "Date")
fig.show() #Day by Day the visualization of the covid cases WorldWide







